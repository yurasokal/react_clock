{"version":3,"sources":["components/Clock.jsx","App.js","index.js"],"names":["Clock","props","state","date","Date","this","timerId","setInterval","setState","console","log","toLocaleTimeString","prevProps","name","clearInterval","React","Component","App","isClockVisible","clockName","setRandomName","Math","random","toFixed","showTime","hideTime","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,G,MAAb,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,KAAM,IAAIC,MAFR,EADrB,qDAME,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAG1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAZP,gCAeE,SAAmBC,GAAY,IACrBC,EAASR,KAAKJ,MAAdY,KAEJA,IAASD,EAAUC,MACrBJ,QAAQC,IAAR,4CACEE,EAAUC,KADZ,eACuBA,MApB7B,kCAwBE,WACEC,cAAcT,KAAKC,WAzBvB,kBA4BE,WACED,KAAKG,SAAS,CACZL,KAAM,IAAIC,SA9BhB,oBAkCE,WAAU,IACAD,EAASE,KAAKH,MAAdC,KAER,OACE,2CAEG,IACAA,EAAKQ,0BAzCd,GAA2BI,IAAMC,YCyDlBC,E,4MAtDbf,MAAQ,CACNgB,gBAAgB,EAChBC,UAAW,G,EAGbC,cAAgB,WACd,EAAKZ,SAAS,CACZW,WAA4B,IAAhBE,KAAKC,UAAgBC,QAAQ,M,EAI7CC,SAAW,WACT,EAAKhB,SAAS,CAAEU,gBAAgB,K,EAGlCO,SAAW,WACT,EAAKjB,SAAS,CAAEU,gBAAgB,K,4CAGlC,WAAU,IAAD,EAC+Bb,KAAKH,MAAnCgB,EADD,EACCA,eAAgBC,EADjB,EACiBA,UAExB,OACE,yBAAKO,UAAU,OACb,2CACA,6BACIR,EACE,kBAAC,EAAD,CAAOL,KAAMM,IAAgB,MAEnC,4BACEQ,KAAK,SACLC,QAASvB,KAAKmB,UAFhB,aAMC,IACD,4BACEG,KAAK,SACLC,QAASvB,KAAKoB,UAFhB,aAMC,IACD,4BACEE,KAAK,SACLC,QAASvB,KAAKe,eAFhB,wB,GA5CUL,IAAMC,WCDxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.9c598966.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { name } = this.props;\n\n    if (name !== prevProps.name) {\n      console.log(`The Clock was renamed from\n      ${prevProps.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <p>\n        Current time:\n        {' '}\n        {date.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: false,\n    clockName: 1,\n  }\n\n  setRandomName = () => {\n    this.setState({\n      clockName: (Math.random() * 100).toFixed(0),\n    });\n  }\n\n  showTime = () => {\n    this.setState({ isClockVisible: true });\n  }\n\n  hideTime = () => {\n    this.setState({ isClockVisible: false });\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <div>\n          { isClockVisible\n            ? <Clock name={clockName} /> : null}\n        </div>\n        <button\n          type=\"button\"\n          onClick={this.showTime}\n        >\n          Show Time\n        </button>\n        {' '}\n        <button\n          type=\"button\"\n          onClick={this.hideTime}\n        >\n          Hide Time\n        </button>\n        {' '}\n        <button\n          type=\"button\"\n          onClick={this.setRandomName}\n        >\n          Set Random Name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}